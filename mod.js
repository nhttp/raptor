const T=r=>new Response("ERROR: "+r.message,{status:r.status||500}),q="application/json; charset=utf-8",f=r=>{const c=[];let e=-1;for(;(e=r.indexOf("/",e+1))!=-1&&(c.push(e),c.length!==3););let s=r.substring(c[2]);return s.indexOf("?")!==-1&&(s=s.substring(0,s.indexOf("?"))),s};export function raptor({onError:r=T,on404:c=T.bind(null,{status:404,message:"404 not found"}),sub:e=!1}={}){const s={};let x=[];return{subs:[],resolve(n,t){const o=n;o.params={},o.conn=t||{};const l=f(o.url);let a=[],d=s[o.method]||[],i=0;s.ANY&&(d=s.ANY.concat(d));for(const[p,u,h]of d)if(u.test(l)){h&&(o.params=u.exec(l).groups||{}),a=p;break}a=x.concat(a,[c]);const R=p=>{let u;try{u=p?r(p,o,R):a[i++](o,R)}catch(h){return p?r(h,o,R):R(h)}return u&&(u.then?u.then(void 0).catch(R):u)};return R()},make(n,...t){if(t=t.flat(),n==="WARE")return x=x.concat(t),this;if(n==="ERROR")return r=t[0],this;if(n==="404")return c=t[0],this;const o=n.indexOf("/"),l=o!==-1?n.substring(0,n.indexOf("/")):n;let a=o!==-1?n.substring(n.indexOf("/")):"/";if(l==="ROUTER"){a==="/"&&(a="");const d=[];for(let i=0;i<t.length;i++)if(typeof t[i]=="function"&&d.push(t[i]),typeof t[i]=="object")for(let R=0;R<t[i].subs.length;R++){const p=t[i].subs[R];p.fns=d.concat(p.fns),this.make(p.method+a+p.path,...p.fns)}return this}return e?this.subs.push({method:l,path:a,fns:t}):(s[l]=s[l]||[]).push([t,new RegExp(`^${a.replace(/\/$/,"").replace(/:(\w+)(\?)?(\.)?/g,"$2(?<$1>[^/]+)$2$3").replace(/(\/?)\*/g,"($1.*)?").replace(/\.(?=[\w(])/,"\\.")}/*$`),a.indexOf("/:")!==-1]),this},getRoute:()=>s}}raptor.createRouter=()=>raptor({sub:!0});export class JsonResponse extends Response{constructor(c,e={}){e.headers?e.headers instanceof Headers?e.headers.set("content-type",q):e.headers["content-type"]=q:e.headers={"content-type":q},super(JSON.stringify(c),e)}}export class HttpError extends Error{constructor(c,e,s){super(e);this.message=e||"Http Error",this.status=c||500,this.name=s||"HttpError"}}
