const T=o=>new Response("ERROR: "+o.message,{status:o.status||500}),q="application/json; charset=utf-8",x=o=>{const u=[];let t=-1;for(;(t=o.url.indexOf("/",t+1))!=-1&&(u.push(t),u.length!==3););const e={};e.url=e.pathname=o.url.substring(u[2]),e.query="";const l=e.url.indexOf("?");l!==-1&&(e.pathname=e.url.substring(0,l),e.query=e.url.substring(l+1)),o.parsedUrl=e};export function raptor({onError:o=T,on404:u=T.bind(null,{status:404,message:"404 not found"}),sub:t=!1}={}){const e={};let l=[];return{subs:[],resolve(p,s){const a=p;a.params={},a.conn=s||{},x(a);let i=[],c=e[a.method]||[],d=0;e.ANY&&(c=e.ANY.concat(c));for(const[R,n,h]of c)if(n.test(a.parsedUrl.pathname)){h&&(a.params=n.exec(a.parsedUrl.pathname).groups||{}),i=R;break}i=l.concat(i,[u]);const r=R=>{let n;try{n=R?o(R,a,r):i[d++](a,r)}catch(h){return R?o(h,a,r):r(h)}return n&&(n.then?n.then(void 0).catch(r):n)};return r()},make(p,...s){if(s=s.flat(),p==="WARE")return l=l.concat(s),this;if(p==="ERROR")return o=s[0],this;if(p==="404")return u=s[0],this;const a=p.indexOf("/"),i=a!==-1?p.substring(0,p.indexOf("/")):p;let c=a!==-1?p.substring(p.indexOf("/")):"/";if(i==="ROUTER"){c==="/"&&(c="");const d=[];for(let r=0;r<s.length;r++)if(typeof s[r]=="function"&&d.push(s[r]),typeof s[r]=="object")for(let R=0;R<s[r].subs.length;R++){const n=s[r].subs[R];n.fns=d.concat(n.fns),this.make(n.method+c+n.path,...n.fns)}return this}return t?this.subs.push({method:i,path:c,fns:s}):(e[i]=e[i]||[]).push([s,new RegExp(`^${c.replace(/\/$/,"").replace(/:(\w+)(\?)?(\.)?/g,"$2(?<$1>[^/]+)$2$3").replace(/(\/?)\*/g,"($1.*)?").replace(/\.(?=[\w(])/,"\\.")}/*$`),c.indexOf("/:")!==-1]),this},getRoute:()=>e}}raptor.createRouter=()=>raptor({sub:!0});export class JsonResponse extends Response{constructor(u,t={}){t.headers?t.headers instanceof Headers?t.headers.set("content-type",q):t.headers["content-type"]=q:t.headers={"content-type":q},super(JSON.stringify(u),t)}}export class HttpError extends Error{constructor(u,t,e){super(t);this.message=t||"Http Error",this.status=u||500,this.name=e||"HttpError"}}
